//=============================================================================
// シェーダマネージャー処理
// Author : YUUSAN KA
//=============================================================================
#include "main.h"
#include "shaderManager.h"

//*****************************************************************************
//   静的メンバー変数宣言
//*****************************************************************************
CShaderBase *CShaderManager::m_pShader[CShaderManager::TYPE_MAX];

//==================================================================================================================================================
// 初期化処理
//==================================================================================================================================================
void CShaderManager::Init()
{
	Uninit();
	m_pShader[TYPE_GAME_IMAGE] = new CShaderModel;
	m_pShader[TYPE_GAME_IMAGE]->Create();

	m_pShader[TYPE_ANIME]= new CShaderManga;
	m_pShader[TYPE_ANIME]->Create();

	m_pShader[TYPE_SHADW_MAP] = new CShaderShadowMap;
	m_pShader[TYPE_SHADW_MAP]->Create();

	for (int i = 0; i < TYPE_MAX; ++i)
	{
		if (m_pShader[i] == NULL) {
			MessageBox(NULL, "シェーダ生成エラー", "エラー", MB_OK | MB_ICONASTERISK);         // エラーメッセージ
		}
	}
}

//==================================================================================================================================================
// 終了処理
//==================================================================================================================================================
void CShaderManager::Uninit(void)
{
	for (int i = 0; i < TYPE_MAX; ++i)
	{
		if (m_pShader[i] != NULL) {
			m_pShader[i]->Delete();
			m_pShader[i] = NULL;
		}
	}
}
